options
{
	LOOKAHEAD=1;
}

PARSER_BEGIN(Calculator)

public class Calculator
{
	public static void main(String args[]) throws ParseException
	{
		Calculator myCalc = new Calculator(System.in);
		SimpleNode root = myCalc.Expression(); // devolve referência para o nó raiz da árvore

		root.dump(""); // imprime no ecrã a árvore
	}
}

PARSER_END(Calculator)

SKIP :
{
	" " | "\r" | "\t"
}

TOKEN:
{
	< INTEGER: (["0"-"9"])+ >
	| < LF: "\n" >
}

SimpleNode Expression(): {}
{
	Expr1() <LF> {return jjtThis;} // código Java entre chavetas
}

void Expr1(): {}
{
	Expr2() [("+" | "-") Expr2()]
}

void Expr2(): {}
{
	Expr3() [("*" | "/") Expr3()]
}

void Expr3(): {}
{
	<INTEGER>
	| "-" Expr3()
	| "(" Expr1() ")"
}